<?php

/**
 * This is the model base class for the table "informe_final".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "InformeFinal".
 *
 * Columns in table "informe_final" available as properties of the model,
 * followed by relations of table "informe_final" available as properties of the model.
 *
 * @property integer $inf_codigo
 * @property integer $cur_codigo
 * @property integer $tem_codigo
 * @property integer $doc_codigo
 * @property string $inf_nombre
 * @property string $inf_fecha_entrega
 * @property integer $inf_num_asistentes
 * @property integer $inf_num_inscritos
 * @property integer $inf_num_retirados
 * @property integer $inf_num_aprobados
 * @property string $inf_promedio_asistencia
 * @property string $inf_promedio_calificacion
 * @property string $inf_desarrollo
 * @property string $inf_logros
 * @property string $inf_conclusiones
 * @property string $inf_recomendaciones
 *
 * @property Docente $docCodigo
 * @property Cursos $curCodigo
 * @property Temario $temCodigo
 */
abstract class BaseInformeFinal extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'informe_final';
	}

	public static function representingColumn() {
		return 'inf_nombre';
	}

	public function rules() {
		return array(
                        array('inf_fecha_entrega, inf_desarrollo, inf_logros, inf_conclusiones, inf_recomendaciones', 'required'),			
			array('cur_codigo, tem_codigo, doc_codigo, inf_num_asistentes, inf_num_inscritos, inf_num_retirados, inf_num_aprobados', 'numerical', 'integerOnly'=>true),
			array('inf_nombre', 'length', 'max'=>100),
			array('inf_promedio_asistencia, inf_promedio_calificacion', 'length', 'max'=>10),
			array('inf_fecha_entrega, inf_desarrollo, inf_logros, inf_conclusiones, inf_recomendaciones', 'safe'),
			array('cur_codigo, tem_codigo, doc_codigo, inf_nombre, inf_fecha_entrega, inf_num_asistentes, inf_num_inscritos, inf_num_retirados, inf_num_aprobados, inf_promedio_asistencia, inf_promedio_calificacion, inf_desarrollo, inf_logros, inf_conclusiones, inf_recomendaciones', 'default', 'setOnEmpty' => true, 'value' => null),
			array('inf_codigo, cur_codigo, tem_codigo, doc_codigo, inf_nombre, inf_fecha_entrega, inf_num_asistentes, inf_num_inscritos, inf_num_retirados, inf_num_aprobados, inf_promedio_asistencia, inf_promedio_calificacion, inf_desarrollo, inf_logros, inf_conclusiones, inf_recomendaciones', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'docCodigo' => array(self::BELONGS_TO, 'Docente', 'doc_codigo'),
			'curCodigo' => array(self::BELONGS_TO, 'Cursos', 'cur_codigo'),
			'temCodigo' => array(self::BELONGS_TO, 'Temario', 'tem_codigo'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'inf_codigo' => Yii::t('app', 'Inf Codigo'),
			'cur_codigo' => Yii::t('app', 'Cur Codigo'),
			'tem_codigo' => Yii::t('app', 'Tem Codigo'),
			'doc_codigo' => Yii::t('app', 'Doc Codigo'),
			'inf_nombre' => Yii::t('app', 'Inf Nombre'),
			'inf_fecha_entrega' => Yii::t('app', 'Inf Fecha Entrega'),
			'inf_num_asistentes' => Yii::t('app', 'Inf Num Asistentes'),
			'inf_num_inscritos' => Yii::t('app', 'Inf Num Inscritos'),
			'inf_num_retirados' => Yii::t('app', 'Inf Num Retirados'),
			'inf_num_aprobados' => Yii::t('app', 'Inf Num Aprobados'),
			'inf_promedio_asistencia' => Yii::t('app', 'Inf Promedio Asistencia'),
			'inf_promedio_calificacion' => Yii::t('app', 'Inf Promedio Calificacion'),
			'inf_desarrollo' => Yii::t('app', 'Inf Desarrollo'),
			'inf_logros' => Yii::t('app', 'Inf Logros'),
			'inf_conclusiones' => Yii::t('app', 'Inf Conclusiones'),
			'inf_recomendaciones' => Yii::t('app', 'Inf Recomendaciones'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('inf_codigo', $this->inf_codigo);
		$criteria->compare('cur_codigo', $this->cur_codigo);
		$criteria->compare('tem_codigo', $this->tem_codigo);
		$criteria->compare('doc_codigo', $this->doc_codigo);
		$criteria->compare('inf_nombre', $this->inf_nombre, true);
		$criteria->compare('inf_fecha_entrega', $this->inf_fecha_entrega, true);
		$criteria->compare('inf_num_asistentes', $this->inf_num_asistentes);
		$criteria->compare('inf_num_inscritos', $this->inf_num_inscritos);
		$criteria->compare('inf_num_retirados', $this->inf_num_retirados);
		$criteria->compare('inf_num_aprobados', $this->inf_num_aprobados);
		$criteria->compare('inf_promedio_asistencia', $this->inf_promedio_asistencia, true);
		$criteria->compare('inf_promedio_calificacion', $this->inf_promedio_calificacion, true);
		$criteria->compare('inf_desarrollo', $this->inf_desarrollo, true);
		$criteria->compare('inf_logros', $this->inf_logros, true);
		$criteria->compare('inf_conclusiones', $this->inf_conclusiones, true);
		$criteria->compare('inf_recomendaciones', $this->inf_recomendaciones, true);

		return new CActiveDataProvider(get_class($this), array(
			'criteria' => $criteria,
		));
	}
}