<?php

/**
 * This is the model base class for the table "asistencia".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Asistencia".
 *
 * Columns in table "asistencia" available as properties of the model,
 * followed by relations of table "asistencia" available as properties of the model.
 *
 * @property integer $asi_codigo
 * @property integer $ins_codigo
 * @property integer $cur_codigo
 * @property string $asi_porcentaje
 * @property string $asi_observacion
 *
 * @property Cursos $curCodigo
 * @property Inscripcion $insCodigo
 */
abstract class BaseAsistencia extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'asistencia';
	}

	public static function representingColumn() {
		return 'asi_porcentaje';
	}

	public function rules() {
		return array(
			array('asi_porcentaje, asi_observacion', 'required'),
			array('ins_codigo, cur_codigo', 'numerical', 'integerOnly'=>true),
			array('asi_porcentaje', 'length', 'max'=>10),
			array('asi_observacion', 'length', 'max'=>45),
			array('ins_codigo, cur_codigo, asi_porcentaje, asi_observacion', 'default', 'setOnEmpty' => true, 'value' => null),
			array('asi_codigo, ins_codigo, cur_codigo, asi_porcentaje, asi_observacion', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'curCodigo' => array(self::BELONGS_TO, 'Cursos', 'cur_codigo'),
			'insCodigo' => array(self::BELONGS_TO, 'Inscripcion', 'ins_codigo'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'asi_codigo' => Yii::t('app', 'Asi Codigo'),
			'ins_codigo' => Yii::t('app', 'Ins Codigo'),
			'cur_codigo' => Yii::t('app', 'Cur Codigo'),
			'asi_porcentaje' => Yii::t('app', 'Asi Porcentaje'),
			'asi_observacion' => Yii::t('app', 'Asi Observacion'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('asi_codigo', $this->asi_codigo);
		$criteria->compare('ins_codigo', $this->ins_codigo);
		$criteria->compare('cur_codigo', $this->cur_codigo);
		$criteria->compare('asi_porcentaje', $this->asi_porcentaje, true);
		$criteria->compare('asi_observacion', $this->asi_observacion, true);

		return new CActiveDataProvider(get_class($this), array(
			'criteria' => $criteria,
		));
	}
}