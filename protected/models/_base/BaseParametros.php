<?php

/**
 * This is the model base class for the table "parametros".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Parametros".
 *
 * Columns in table "parametros" available as properties of the model,
 * followed by relations of table "parametros" available as properties of the model.
 *
 * @property integer $par_codigo
 * @property integer $emp_codigo
 * @property integer $cur_codigo
 * @property integer $ein_codigo
 * @property integer $pla_codigo
 * @property string $ins_fecha_pago_inscripcion
 * @property integer $par_todos
 * @property integer $par_sino
 * @property integer $par_destino
 * @property string $par_fecha_ini
 * @property string $par_fecha_fin
 * @property string $par_busqueda
 * @property string $par_opcion
 * @property string $par_persona
 *
 * @property Empresa $empCodigo
 */
abstract class BaseParametros extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'parametros';
	}

	public static function representingColumn() {
		return 'ins_fecha_pago_inscripcion';
	}

	public function rules() {
		return array(
			array('par_codigo', 'required'),
			array('par_codigo, emp_codigo, gru_codigo, cur_codigo, ein_codigo, pla_codigo, par_todos, par_sino, par_destino', 'numerical', 'integerOnly'=>true),
			array('par_busqueda, par_opcion', 'length', 'max'=>80),
			array('par_persona', 'length', 'max'=>10),
			array('ins_fecha_pago_inscripcion, par_fecha_ini, par_fecha_fin', 'safe'),
			array('par_codigo, emp_codigo, cur_codigo, ein_codigo, pla_codigo, ins_fecha_pago_inscripcion, par_todos, par_sino, par_destino, par_fecha_ini, par_fecha_fin, par_busqueda, par_opcion, par_persona, gru_codigo', 'default', 'setOnEmpty' => true, 'value' => null),
			array('par_codigo, emp_codigo, cur_codigo, ein_codigo, pla_codigo, ins_fecha_pago_inscripcion, par_todos, par_sino, par_destino, par_fecha_ini, par_fecha_fin, par_busqueda, par_opcion, par_persona, gru_codigo', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'empCodigo' => array(self::BELONGS_TO, 'Empresa', 'emp_codigo'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'par_codigo' => Yii::t('app', 'Par Codigo'),
			'emp_codigo' => Yii::t('app', 'Empresa'),
                        'gru_codigo' => Yii::t('app', 'Grupo'),
			'cur_codigo' => Yii::t('app', 'Curso'),
			'ein_codigo' => Yii::t('app', 'Ein Codigo'),
			'pla_codigo' => Yii::t('app', 'Planificacion'),
			'ins_fecha_pago_inscripcion' => Yii::t('app', 'Ins Fecha Pago Inscripcion'),
			'par_todos' => Yii::t('app', 'Par Todos'),
			'par_sino' => Yii::t('app', 'Par Sino'),
			'par_destino' => Yii::t('app', 'Par Destino'),
			'par_fecha_ini' => Yii::t('app', 'Fecha Inicio'),
			'par_fecha_fin' => Yii::t('app', 'Fecha Fin'),
			'par_busqueda' => Yii::t('app', 'Par Busqueda'),
			'par_opcion' => Yii::t('app', 'Opcion'),
			'par_persona' => Yii::t('app', 'Persona'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('par_codigo', $this->par_codigo);
                $criteria->compare('gru_codigo', $this->gru_codigo);
		$criteria->compare('emp_codigo', $this->emp_codigo);
		$criteria->compare('cur_codigo', $this->cur_codigo);
		$criteria->compare('ein_codigo', $this->ein_codigo);
		$criteria->compare('pla_codigo', $this->pla_codigo);
		$criteria->compare('ins_fecha_pago_inscripcion', $this->ins_fecha_pago_inscripcion, true);
		$criteria->compare('par_todos', $this->par_todos);
		$criteria->compare('par_sino', $this->par_sino);
		$criteria->compare('par_destino', $this->par_destino);
		$criteria->compare('par_fecha_ini', $this->par_fecha_ini, true);
		$criteria->compare('par_fecha_fin', $this->par_fecha_fin, true);
		$criteria->compare('par_busqueda', $this->par_busqueda, true);
		$criteria->compare('par_opcion', $this->par_opcion, true);
		$criteria->compare('par_persona', $this->par_persona, true);

		return new CActiveDataProvider(get_class($this), array(
			'criteria' => $criteria,
		));
	}
}